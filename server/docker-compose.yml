version: "3.4"

x-logging:
  &default-logging
  driver: 'json-file'
  options:
    max-size: '20m'
    max-file: '5'

services:
  docker-proxy:
    image: tecnativa/docker-socket-proxy
    logging: *default-logging
    environment:
      - CONTAINERS=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - docker-sock
    restart: always

  reverse-proxy:
    image: traefik:v2.8
    depends_on:
      - docker-proxy
    command:
      # - "--api.insecure=true" # for debug interface on 8080
      - "--providers.docker=true"
      - "--providers.docker.endpoint=tcp://docker-proxy:2375"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/configs/"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web-secure.address=:443"
      - "--certificatesResolvers.le.acme.email=naveen@manim.community"
      - "--certificatesResolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesResolvers.le.acme.keyType=EC256"
      - "--certificatesResolvers.le.acme.httpChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
      - "--experimental.http3=true"
      - "--entrypoints.web-secure.http3"
      # Access logs: Which request+status from which IP using which User-Agent?
      - "--accesslog=true"
      - "--accesslog.bufferingsize=100"
      - "--accesslog.format=json"
      - "--accesslog.fields.defaultmode=drop"
      - "--accesslog.fields.names.RequestHost=keep"
      - "--accesslog.fields.names.RequestMethod=keep"
      - "--accesslog.fields.names.RequestPath=keep"
      - "--accesslog.fields.names.RequestPort=keep"
      - "--accesslog.fields.names.RequestProtocol=keep"
      - "--accesslog.fields.names.ClientHost=keep"
      - "--accesslog.fields.names.DownstreamStatus=keep"
      - "--accesslog.fields.headers.defaultmode=drop"
      - "--accesslog.fields.headers.names.User-Agent=keep"
    logging:
      << : *default-logging
      options:
        max-size: "50m"
        max-file: "20"
    ports:
      - "80:80"
      - "443:443/tcp"
      - "443:443/udp"
      # - "8080:8080" # for debug interface on 8080
    volumes:
      - ./traefik-tls.yml:/configs/traefik-tls.yml:ro
      - letsencrypt:/letsencrypt/
    networks:
      - default
      - docker-sock
    restart: always

  app:
    image: ghcr.io/manimcommunity/manim-website-api:latest
    logging: *default-logging
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.app-compress.compress=true"
      - "traefik.http.middlewares.app-scheme-redir.redirectscheme.scheme=https"
      - "traefik.http.middlewares.app-headers.headers.stsseconds=31536000"
      # http
      - "traefik.http.routers.app-router.rule=Host(`api.manim.community`)"
      - "traefik.http.routers.app-router.middlewares=app-scheme-redir,app-compress"
      - "traefik.http.routers.app-router.entrypoints=web"
      # https
      - "traefik.http.routers.app-router-secure.rule=Host(`api.manim.community`)"
      - "traefik.http.routers.app-router-secure.tls=true"
      - "traefik.http.routers.app-router-secure.tls.certresolver=le"
      - "traefik.http.routers.app-router-secure.middlewares=app-headers,app-compress"
      - "traefik.http.routers.app-router-secure.entrypoints=web-secure"
    env_file:
      - ./mysql.env
    environment:
      FORWARDED_ALLOW_IPS: "*"
    restart: always

volumes:
  letsencrypt:

networks:
  default:
  docker-sock:
    internal: true
